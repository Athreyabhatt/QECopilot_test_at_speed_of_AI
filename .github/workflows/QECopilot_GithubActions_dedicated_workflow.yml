#======================================================================================
# WORKFLOW FOR SCENARIO 2: SEPARATE QA TEAM (NON-PROD)
# Trigger: On Pull Request to `main` from a branch prefixed with `qa/`.
# Action: Runs AI-generated tests against a live, non-prod environment URL.
#======================================================================================
name: 'QECopilot: Separate QA Team CI (Non-Prod)'

on:
  pull_request:
    branches:
      - 'main'
    paths:
      - 'features/**' # Only trigger if feature files are changed

env:
  # Choose your automation stack: playwright-typescript, playwright-java, selenium-java, webdriverio-typescript
  AUTOMATION_STACK: playwright-typescript

jobs:
  generate_and_test_non_prod:
    runs-on: ubuntu-latest
    # Specifies which environment to use for secrets and variables
    environment: non-prod 
    permissions:
      contents: write

    steps:
      - name: Checkout repository with full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Detect changed feature files
        id: changed_features
        run: |
          FILES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | grep '.feature$' || echo "")
          echo "changed_files=$FILES" >> $GITHUB_OUTPUT

      - name: Install GitHub Copilot CLI
        run: npm install -g @github/copilot

      - name: Authenticate Copilot CLI
        run: |
          # Use GitHub token for authentication
          export GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          copilot /login

      - name: Invoke Copilot Agent to Generate Scripts
        if: steps.changed_features.outputs.changed_files != ''
        run: |
          echo "${{ steps.changed_features.outputs.changed_files }}"
          for file in ${{ steps.changed_features.outputs.changed_files }}; do
            FEATURE_CONTENT=$(cat "$file")
            INSTRUCTIONS=$(cat ./.github/instructions/QECopilot-${{ env.AUTOMATION_STACK }}-instructions.md)
            
            copilot -p "You are a test automation code generator. Feature File: $(echo "$FEATURE_CONTENT" | tr -d '\n') Instructions: $(echo "$INSTRUCTIONS" | tr -d '\n') Task: Generate Page Object Model (.page.ts) and Step Definition (.steps.ts) files following the instructions. Write the files to pages/ and steps/ directories." --allow-tool 'write' --deny-tool 'shell(rm)' --deny-tool 'shell(git push)'
          done

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests against Non-Prod
        run: npx cucumber-js --format junit:results.xml
        env:
          # The BASE_URL is securely provided by the GitHub Environment
          BASE_URL: ${{ vars.BASE_URL }} 

      - name: Commit and Push Generated Scripts
        if: steps.changed_features.outputs.changed_files != ''
        run: |
          git config --global user.name 'QECopilot Bot'
          git config --global user.email 'actions@github.com'
          git add .
          if git diff-index --quiet HEAD; then
            echo "No new test scripts were generated. Nothing to commit."
          else
            git commit -m "feat(ai): Generate QE scripts for updated features [skip ci]"
            git push
          fi